#########
# Basics
#########
- test fixture = fixed data and fixed environment so that test runs and results are repeatable
- input data, mock objects, loading database with known data, etc

- unit testing = ideally 70-80% converage
- no external dependencies, no database, no spring context, etc

- integration tests = between objects and overall system
- can include spring context, database and message brokers, etc

- functional tests = testing the running application which is live and deployed
- testing functionality like using a web driver, calling web services, sending/receiving messages, etc

- unit tests => integration tests => functional tests

- tdd = unit tests first -> fix -> refactor
- bdd = given -> when -> then

- mocks = fake implementation of a class
- test double for dependent objects - expected - verify

- spy = like a mock but real object


#####################
# Testing Frameworks
#####################
# Junit
- most popular
- Junit 5 released on 2017

# TestNG
- 2004 as an alternative to Junit

# Spock
- in groovy
- BDD
- own mocking framework built-in

# Cucumber
- BDD
- for java, ruby, js
- very popular in Ruby
- Gherkin syntax

# Mockito
- only for mocks
- used with Junit or TestNG

# REST-assured
- for testing RESTful web services
- BDD

# Selenium
- only web browser automation
- used with Junit, TestNG or Spock

##########
# CI / CD
##########
# Continuous Integration
Check-in code => automated build and tests triggered => results via email or other means to report errors if any

- Common CI Build servers
self-hosted: Jenkins, Bamboo, TeamCity, Hudson
cloud based: TravisCI, Gitlab CI, AWS CodeBuild

# Continuous Deployment
- automatically deploy build artifacts after all CI tests have run to dev / uat / staging
example - AWS CodePipeline

# Continuous Delivery
- automatically deliver code changes directly to the prod
- involves high degree of automation in testing and deployment
- not used in banks because of compliance

Continuous Integration => Continuous Deployment => Continuous Delivery


##################
# TDD By Example
##################
- famous book by Kent Beck



